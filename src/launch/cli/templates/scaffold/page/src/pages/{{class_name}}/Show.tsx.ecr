import React, { useState, useEffect } from 'react';
import { Link, RouteComponentProps } from '@reach/router';
import axios from 'axios';

import <%= class_name %> from '../../types/<%= class_name %>';

interface Show extends RouteComponentProps {
  <%= @name %>?: <%= class_name %>
  id?: number
  path: string
}

interface ServerResponse {
  data: <%= class_name %>
}

export default ({ id }: Show) => {
  const [<%= @name %>, set<%= class_name %>] = useState<<%= class_name %> | undefined>(undefined);

  useEffect(() => {
    const get<%= class_name %> = async () => {
      await axios.get(`http://localhost:3001/<%= name_plural %>/${id}`)
        .then((res: ServerResponse) => {
          console.log(res);
          set<%= class_name %>(res.data);
        });
    };

    get<%= class_name %>();
  }, []);

  const handleDelete = (e: React.MouseEvent<HTMLButtonElement>) => {
    e.preventDefault;
    if (!(e.target instanceof HTMLButtonElement)) {
      return;
    }
    axios.delete(
      `http://localhost:3001/<%= name_plural %>/${e.target.dataset.id}`,
      { data: {} },
    ).then((res: ServerResponse) => {
      // TODO: set message
      console.log(res);
    });
  };

  return (
    <>
      <React.Suspense fallback={<em>Loading...</em>}>
        <h1>Show <%= display_name %></h1>
        {
          pet ? (
            <>
<% @fields.reject{ |f| f.hidden }.each do |field| -%>
              <p>{<%= @name %>.<%= field.name %><% if field.reference? %>.id<% end %>}</p>
<% end -%>
              <p>
                <Link className="btn btn-light btn-sm" to="/<%= name_plural %>">Back</Link>
                {/* <Link to={`/<%= name_plural %>/${<%= @name %>.id}/edit`} className="btn btn-success btn-sm">Edit</Link> */}
                <button
                  className="btn btn-danger btn-sm"
                  onClick={(e) => handleDelete(e)}
                  data-id={<%= @name %>.id}
                >
                  Delete
                </button>
              </p>
            </>
          ) : null
        }
      </React.Suspense>
    </>
  );
};
